---
layout:     post
title:      groovy小记
subtitle:   groovy-Java的得力助手
date:       2018-03-15
author:     mushuzi
header-img: img/post-bg-ios9-web.jpg
catalog: true
tags:
   - Java
   - groovy
---

# 前言
Groovy是一种基于JVM（Java虚拟机）的敏捷开发语言，它结合了Python、Ruby和Smalltalk的许多强大的特性，Groovy 代码能够与 Java 代码很好地结合，也能用于扩展现有代码。由于其运行在 JVM 上的特性，Groovy 可以使用其他 Java 语言编写的库。

# 正文

groovy真的太好用啦！groovy结合Java编程，简直大大简化代码的编程的复杂度！本文将结合自己在开发当中的经验教训，总结几个groovy为编程者提供的绝对便利。

## 动态类型
在Java编程中，我们都需要对变量、属性、方法以及方法的返回值指定类型，而在groovy中，不需要指定任何类型，仅仅通过一个简单的“def"就可以使用所有的类型！roovy会自动为你实现以下两个功能：
* 类型的自动包装
* 多类型之间的自动转换

## 闭包
闭包对于Java来说是一个新的概念，闭包就是可以使用参数的代码片段，每个闭包会被编译成继承groovy.lang.Closure类的类，这个类有一个叫call方法，通过该方法可以传递参数并调用这个闭包.它们可以访问并修改在闭包创建的范围内的变量，在闭包内创建的变量在闭包被调用的范围内同样可以被引用， 闭包可以保存在变量中并被作为参数传递到方法中。

举个代码的例子：

    class Example{
        static void main(String[] args){
            def clos = {param ->
                println "Hello ${param}"};
            clos.call("World");
        }
    }
在上面的代码示例中，使用${param}来让closure接受一个参数。当通过clos.call语句调用闭包时，我们现在可以选择将一个参数传递给闭包。上述代码运行结果：

    Hello World
通过上述代码，可以观察到groovy还未编程者做了一个及其便利的简化，即方法的调用可以省略圆括号，如:

    println "hello"

## 映射
groovy对映射的处理是最令人欢呼的。映射Map中的键可以是任何类，同Java一样，Map中的值由键访问。需要以键值对的形式插入新的元素。但是groovy尤其惊艳之处：

### map的定义
无需像Java一样new一个HashMap类，也不用指定数据类型，只需要使用下列语句即可创建一个空的map：

    def map = [:]

### map的排序
1. 按照键排序

    def map = ["lily":89, "jack":98, "anji":100].sort()

sort()默认是按照键排序，排序之后为：["anji":100, "lily":89, "jack":98]

2. 按照值排序

按值升序排列

    def map = ["lily":89, "jack":98, "anji":100].sort{a, b ->
            a.value - b.value
    }
    
按值降序排列

    def map = ["lily":89, "jack":98, "anji":100].sort{a, b ->
            b.value - a.value
    }
